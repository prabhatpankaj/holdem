version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.12.2
  awsebcli: sbc-orbs/awsebcli@0.0.3

executors:
  curl:
    docker:
      - image: curlimages/curl:7.71.1
  node:
    docker:
      - image: docker/compose:1.27.4
  terraform:
    docker:
      - image: hashicorp/terraform:0.13.0
  aws:
    docker:
      - image: circleci/python:3.7.1

commands:
  javascript-setup:
    steps:
      - checkout:
          path: ~/repo
      - setup_remote_docker
      - run: ./scripts.sh up_ci
  terraform-setup:
    steps:
      - checkout:
          path: ~/repo
      - run: terraform init

jobs:
  lint-javascript:
    executor: node
    parameters:
      directory:
        default: ""
        type: string
    working_directory: ~/repo
    steps:
      - javascript-setup
      - run: ./scripts.sh lint_<<parameters.directory>>
  test-javascript:
    executor: node
    parameters:
      directory:
        default: ""
        type: string
    working_directory: ~/repo
    steps:
      - javascript-setup
      - attach_workspace:
          at: .
      - run: |
          ./scripts.sh test_<<parameters.directory>>
          ./cc/cc-test-reporter format-coverage --add-prefix=<<parameters.directory>> -t lcov -o cc/codeclimate.<<parameters.directory>>.json ./<<parameters.directory>>/coverage/lcov.info
      - persist_to_workspace:
          root: .
          paths:
            - cc/codeclimate.<<parameters.directory>>.json
  setup-coverage:
    executor: curl
    working_directory: ~/repo
    steps:
      - checkout:
          path: ~/repo
      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p cc/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc/cc-test-reporter
            chmod +x ./cc/cc-test-reporter
      - persist_to_workspace:
          root: .
          paths:
            - cc
  upload-coverage:
    executor: node
    working_directory: ~/repo
    environment: 
      - CC_TEST_REPORTER_ID: bccf9e20854b07b071ff25debf9d45fb35f99999febc7730a3458d023229386e
    steps:
      - checkout:
          path: ~/repo
      - attach_workspace:
          at: .
      - run:
          name: Upload coverage results to Code Climate
          command: |
            cc/cc-test-reporter sum-coverage cc/codeclimate.*.json -p 2 -o cc/codeclimate.total.json
            cc/cc-test-reporter upload-coverage -i cc/codeclimate.total.json
  build-javascript:
    executor: node
    working_directory: ~/repo
    steps:
      - javascript-setup
      - run: ./scripts.sh build_client
  lint-terraform:
    executor: terraform
    parameters:
      directory:
        default: ""
        type: string
    working_directory: ~/repo/infrastructure/<<parameters.directory>>
    steps:
      - terraform-setup
      - run: terraform fmt
      - run: terraform validate
  plan-terraform:
    executor: terraform
    parameters:
      directory:
        default: ""
        type: string
      plan_name:
        default: ""
        type: string
      with_vars:
        default: false
        type: boolean
    working_directory: ~/repo/infrastructure/<<parameters.directory>>
    steps:
      - terraform-setup
      - when:
          condition: <<parameters.with_vars>>
          steps:
            - run: terraform plan -out=./<<parameters.plan_name>>.plan -var="repo_url=$AWS_ECR_ACCOUNT_URL/poker_app"
      - unless:
          condition: <<parameters.with_vars>>
          steps:
            - run: terraform plan -out=./<<parameters.plan_name>>.plan
      - persist_to_workspace:
          root: ./
          paths:
            - <<parameters.plan_name>>.plan
      - store_artifacts:
          path: ./<<parameters.plan_name>>.plan
  apply-terraform:
    executor: terraform
    parameters:
      directory:
        default: ""
        type: string
      plan_name:
        default: ""
        type: string
    working_directory: ~/repo/infrastructure/<<parameters.directory>>
    steps:
      - terraform-setup
      - attach_workspace:
          at: .
      - run: terraform apply ./<<parameters.plan_name>>.plan
  deploy-server:
    executor: aws
    working_directory: ~/repo
    steps:
      - awsebcli/install
      - awsebcli/configure
      - run: >
          aws elasticbeanstalk update-environment \
            --application-name poker-app-ebs-application \
            --version-label poker-app-latest-version \
            --environment-name poker-app-ebs-prod

workflows:
  deploy:
    jobs:
      - setup-coverage:
          context: AWS Prod
      - lint-javascript:
          name: lint-client-js
          directory: client
          context: AWS Prod
      - test-javascript:
          name: test-client-js
          directory: client
          context: AWS Prod
          requires:
            - setup-coverage
      - build-javascript:
          name: build-client-js
          context: AWS Prod
      - lint-javascript:
          name: lint-server-js
          directory: server
          context: AWS Prod
      - test-javascript:
          name: test-server-js
          directory: server
          context: AWS Prod
          requires:
            - setup-coverage
      - lint-terraform:
          name: lint-repo-terraform
          context: AWS Prod
          directory: repo
      - plan-terraform:
          name: plan-repo-terraform
          context: AWS Prod
          directory: repo
          plan_name: repo
      - lint-terraform:
          name: lint-app-terraform
          context: AWS Prod
          directory: app
      - plan-terraform:
          name: plan-app-terraform
          context: AWS Prod
          directory: app
          plan_name: app
          with_vars: true
      - upload-coverage:
          context: AWS Prod
          requires:
            - test-client-js
            - test-server-js
      - apply-terraform:
          name: apply-repo-terraform
          context: AWS Prod
          directory: repo
          plan_name: repo
          filters:
            branches:
              only: main
          requires:
            - lint-client-js
            - build-client-js
            - lint-server-js
            - lint-repo-terraform
            - plan-repo-terraform
            - lint-app-terraform
            - plan-app-terraform
            - upload-coverage
      - aws-ecr/build-and-push-image:
          name: build-server-image
          context: AWS Prod
          path: ./server
          repo: poker_app
          tag: latest,$CIRCLE_SHA1
          filters:
            branches:
              only: main
          requires:
            - apply-repo-terraform
      - apply-terraform:
          name: apply-app-terraform
          context: AWS Prod
          directory: app
          plan_name: app
          filters:
            branches:
              only: main
          requires:
            - build-server-image
      - deploy-server:
          context: AWS Prod
          filters:
            branches:
              only: main
          requires:
            - apply-app-terraform
